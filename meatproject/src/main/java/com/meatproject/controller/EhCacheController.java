package com.meatproject.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.meatproject.service.EhCacheService;


@RestController
@RequestMapping("/ehcache")
public class EhCacheController {

	@Autowired
	private EhCacheService ehCacheService;
	
	 /**
     * Get Non-Cached Data From ehCacheServiceLayer Generated
     *
     * @param param
     * @return
     */
    @RequestMapping(
            value = "getNormal1",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE
            
    )
    public Map getNormalNonCache(@RequestParam(value = "param", required = true) String param) {

        return ehCacheService.getNormalDataNonCaching(param);
    }

    /**
     * Get Cached Data From ehCacheServiceLayer Generated
     *
     * @param param
     * @return
     */
    @RequestMapping(
            value = "getNormal2",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    public Map getNormalCache(@RequestParam(value = "param", required = true) String param) {

        return ehCacheService.getNormalDataCaching(param);
    }

    /**
     * Get Cached Data From ehCacheServiceLayer Generated By Multiple Parameter
     *
     * @param param1
     * @param param2
     * @param param3
     * @return
     */
    @RequestMapping(
            value = "getNormal3",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    public Map getNormalCacheMultipleParam(
            @RequestParam(value = "param1", required = true) String param1,
            @RequestParam(value = "param2", required = true) String param2,
            @RequestParam(value = "param3", required = false) String param3
    ) {

        return ehCacheService.getNormalDataDefaultKeyStrategy(param1, param2, param3);
    }
    
    
    /**
     * Get Non-Cached Data From ehCacheServiceLayer Generated And Erase Cached Data By Key
     *
     * @param param
     * @return
     */
    @RequestMapping(
            value = "getNormal4",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    public Map getNormalNonCacheErase(
            @RequestParam(value = "param", required = true) String param
    ) {

        return ehCacheService.getNormalDataEraseCache(param);
    }
    

    /**
     * Get Non-Cached Data From Database through Myabatis Mapper
     *
     * @param param
     * @return
     */
    @RequestMapping(
            value = "getMybatis1",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    public Map<String, String> getMybatisNonCache(@RequestParam(value = "param", required = true) Long param) {

        return ehCacheService.getMybatisDataNonCaching(param);
    }

    /**
     * Get Cached Data From Database through Myabatis Mapper
     *
     * @param param
     * @return
     */
    @RequestMapping(
            value = "getMybatis2",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    public Map<String, String> getMybatisCache(@RequestParam(value = "param", required = true) Long param) {

        return ehCacheService.getMybatisDataCaching(param);
    }
}
